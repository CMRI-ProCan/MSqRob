% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importDIAData.R
\name{importDIAData}
\alias{importDIAData}
\title{Import data independent acquisition files}
\usage{
importDIAData(experimentFile, aggr_by = "sequence.var",
  softwareSource = "guess", remove_decoys = FALSE)
}
\arguments{
\item{experimentFile}{The name of a file. For more details about how this argument can be specified, see \code{\link[utils]{read.table}}.}

\item{aggr_by}{A character indicating the column by which the data should be aggregated. The default \code{"sequence.var"} will aggregate the data over different charge states and modification statuses. If you only want to aggregate over charge states, set \code{aggr_by} to \code{"sequence.mod.var"}. If no aggregation at all is desired, set \code{aggr_by} to \code{"none"}. Data will never be aggregated over different \code{filename.var}.}

\item{softwareSource}{The default, \code{"guess"}, tries to guess from which software the file originates.}

\item{remove_decoys}{Should decoys be removed? Defaults to \code{FALSE} as removing of decoys is typically done during our preprocessing step. Can be set to \code{TRUE} to remove decoys already upfront.}
}
\description{
This function generates a peptide data frame from output files originating from either DIAumpire, OpenSWATH, PeakView, Skyline or Spectronaut.
It is largely based on the \code{\link[LFQbench]{FSWE.generateReports}} function from the \code{LFQbench} package and heavily depends on this package.
It is also possible to define a new software format using the \code{\link[LFQbench]{FSWE.addSoftwareConfiguration}} function from the \code{LFQbench} package (Navarro et al., 2016).
}
\references{
Navarro P., Kuharev J., Gillet, L. C., Bernhardt, O. M., MacLean, B., R\"ost, H. L., Tate, S. A., Tsou, C., Reiter, L., Distler, U., Rosenberger, G., Perez-Riverol, Y., Nesvizhskii, A. I., Aebersold, R., and Tenzer, S. (2016) A multicenter study benchmarks software tools for label-free proteome quantification. Nature Biotechnology.
}
